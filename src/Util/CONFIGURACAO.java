/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Util;


import Conexao.ConnectionFactory;
import Views.Principal;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;

/**
 *
 * @author Jeferson
 */
public class CONFIGURACAO extends javax.swing.JFrame {

    Connection connection;
    Statement statement;
    ResultSet resultSet;

    final private String driver = "com.mysql.jdbc.Driver";
    Connection CONEXAO;
    private boolean VERIFICACAO = false;

    /**
     * Creates new form CONFIGURARCAO
     */
    public CONFIGURACAO() {
        initComponents();

        if (VERIFICACAO == false) {
            LE_CONFIGURACAO_GRAVADA();
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        T_Host = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        T_Porta = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        T_User = new javax.swing.JTextField();
        btnTeste = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        T_Senha = new javax.swing.JPasswordField();
        T_Banco = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Configuração de Conexão", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N
        jPanel1.setLayout(null);

        jLabel1.setText("Host");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(20, 20, 120, 14);

        T_Host.setText("localhost");
        T_Host.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                T_HostActionPerformed(evt);
            }
        });
        jPanel1.add(T_Host);
        T_Host.setBounds(10, 40, 230, 30);

        jLabel2.setText("Banco de Dados");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(440, 20, 100, 14);

        T_Porta.setText("3306");
        jPanel1.add(T_Porta);
        T_Porta.setBounds(260, 40, 170, 30);

        jLabel3.setText("User");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(10, 70, 60, 20);

        T_User.setText("root");
        jPanel1.add(T_User);
        T_User.setBounds(10, 90, 230, 30);

        btnTeste.setText("Teste");
        btnTeste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTesteActionPerformed(evt);
            }
        });
        jPanel1.add(btnTeste);
        btnTeste.setBounds(10, 120, 110, 40);

        btnSalvar.setText("Salvar");
        btnSalvar.setEnabled(false);
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });
        jPanel1.add(btnSalvar);
        btnSalvar.setBounds(130, 120, 100, 40);

        jLabel5.setText("Password");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(260, 70, 100, 14);

        T_Senha.setText("root");
        T_Senha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                T_SenhaActionPerformed(evt);
            }
        });
        jPanel1.add(T_Senha);
        T_Senha.setBounds(260, 90, 170, 30);

        T_Banco.setText("xproject");
        jPanel1.add(T_Banco);
        T_Banco.setBounds(440, 40, 100, 30);

        jLabel4.setText("Porta");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(260, 20, 100, 14);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 551, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(567, 224));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnTesteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTesteActionPerformed
        if (CONEXAO_SERVIDOR(T_Host.getText(), T_Porta.getText(), T_User.getText(), T_Senha.getText(), T_Banco.getText())) {
            JOptionPane.showMessageDialog(null, "Teste Bem Sucedido");
            btnSalvar.setEnabled(true);
        } else {
            JOptionPane.showMessageDialog(null, "Falha Na Conexão", "Falha", 0);
        }
    }//GEN-LAST:event_btnTesteActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        if (T_Banco.getText().equals("NOME_BANCO")) {

            JOptionPane.showMessageDialog(this, "Troque o nome do banco de dados");
            return;

        }

        if (CONEXAO_SERVIDOR(T_Host.getText(), T_Porta.getText(), T_User.getText(), T_Senha.getText(), T_Banco.getText())) {
            if (GRAVA_CONFIGURACAO()) {//SE CONSEGUIR GRAVAR A CONFIGURAÇÃO PASSA PARA O PROXIMO PASSO
                if (LE_CONFIGURACAO_GRAVADA()) {//SE CONSEGUIR LER A GRAVAÇÃO REALIZADA PASSA PARA O PROXIMO PASSO
                    if (CRIA_DATA_BASE_COMPLETO()) { //SE NÃO OCORRER ERRO NO QUERES SQL  PASSA PARA O PROXIMO PASSO
                        FECHA_CONEXAO();//PASSOU TODOS OS PASSO AGORA IRÁ FECHAR A TELA E ABRIR OUTRA
                        new Principal().setVisible(true); //CHAMO A TELA PRINCIPAL, OU SE QUIZER POSSO CHAMAR A TELA DE LOGIM. FICA A CRITERIO DO PROGRAMADOR
                        dispose();
                    } else {
                        btnSalvar.setEnabled(false);
                    }
                } else {
                    btnSalvar.setEnabled(false);
                }
            } else {
                btnSalvar.setEnabled(false);
            }
        } else {
            btnSalvar.setEnabled(false);
        }

     

    }//GEN-LAST:event_btnSalvarActionPerformed

    private void T_SenhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_T_SenhaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_T_SenhaActionPerformed

    private void T_HostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_T_HostActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_T_HostActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CONFIGURACAO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CONFIGURACAO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CONFIGURACAO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CONFIGURACAO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        CONFIGURACAO ESTA_TELA = new CONFIGURACAO();//INICIALIZO FAZENDO A PRIMEIRO A VERIFICAÇÃO ANTES DE ABRIR A TELA
        if (ESTA_TELA.LE_CONFIGURACAO_GRAVADA()) {//SE CONSEGUIR SE CONETAR PASSO PARA O PRÓXIMO PASSO.

            if (ESTA_TELA.CRIA_DATA_BASE_COMPLETO()) { //SE NÃO OCORRER ERRO NO QUERES SQL  PASSA PARA O PROXIMO PASSO
                ESTA_TELA.VERIFICACAO = true;//AQUI JA ESTÁ TUDO OK    
                ESTA_TELA.FECHA_CONEXAO();//FECHARA A CONEXAO_SERVIDOR
                new Principal().setVisible(true);; //CHAMO A TELA PRINCIPAL, OU SE QUIZER POSSO CHAMAR A TELA DE LOGIM. FICA A CRITERIO DO PROGRAMADOR
            }
        }
        if (ESTA_TELA.VERIFICACAO == false) {// SE NÃO OCORRER BEM AS VERIFICAÇÕES INICIALIZO O RUN PRA ABRIR A TELA DE CONFIGURAÇÃO

//        
            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    new CONFIGURACAO().setVisible(true);
                }
            });

        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField T_Banco;
    private javax.swing.JTextField T_Host;
    private javax.swing.JTextField T_Porta;
    private javax.swing.JPasswordField T_Senha;
    private javax.swing.JTextField T_User;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton btnTeste;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    private boolean LE_CONFIGURACAO_GRAVADA() {
        boolean leitura = false;
        try {
            String linha;
            String ArquivoConfiguracao = "C:/ConexaoBanco/Configuracao/conexao.ini";
            int cont = 0;
            File arq = new File(ArquivoConfiguracao);
            if (arq.exists()) {

                FileReader reader = new FileReader(ArquivoConfiguracao);
                BufferedReader leitor = new BufferedReader(reader);
                while (true) {
                    linha = leitor.readLine();
                    if (cont == 0) {
                        T_Host.setText(linha);
                    }
                    if (cont == 1) {
                        T_Porta.setText(linha);
                    }
                    if (cont == 2) {
                        T_User.setText(linha);
                    }
                    if (cont == 3) {
                        T_Senha.setText(linha);
                       
                    }
                    if (cont >= 4) {
                        T_Banco.setText(linha);
                        break;
                    }

                    System.out.println(linha + "\n");
                    cont++;
                }
                
            }
            if (arq.exists()) {
                if (CONEXAO_SERVIDOR(T_Host.getText(), T_Porta.getText(), T_User.getText(), T_Senha.getText(), T_Banco.getText())) {
                 
                    leitura = true;
                }
            }

        } catch (Exception erro) {
        }

        return leitura;
    }

    private boolean GRAVA_CONFIGURACAO() {
        boolean grava = false;
        try {
            File diretorio = new File("C:/ConexaoBanco/Configuracao");
            if (!diretorio.exists()) {
                diretorio.mkdirs();
            }
            FileWriter arq1 = new FileWriter("C:/ConexaoBanco/Configuracao/conexao.ini");
            PrintWriter gravarArq = new PrintWriter(arq1);
            gravarArq.println(T_Host.getText());
            gravarArq.println(T_Porta.getText());
            gravarArq.println(T_User.getText());
            gravarArq.println(T_Senha.getText());
            gravarArq.println(T_Banco.getText());

            arq1.close();
            grava = true;
        } catch (IOException erro) {
            JOptionPane.showMessageDialog(null, "Você nao tem permição de adminstrador para configurar o"
                    + " Sistema.", "ERRO !", 0);
        }
        return grava;
    }

    private boolean CONEXAO_SERVIDOR(String Servidor, String Porta, String usuario, String Senha, String Banco) {
        boolean com = false;
        String SERVIDOR = Servidor;
        String PORTA_CONEXAO = Porta;
        String USUARIO = usuario;
        String SENHA = Senha;
        String BANCO = Banco;

        try {
            Class.forName(driver);
            CONEXAO = DriverManager.getConnection("jdbc:mysql://" + SERVIDOR + ":" + PORTA_CONEXAO + "",
                    USUARIO, SENHA);
            com = true;
        } catch (ClassNotFoundException Fonte) {
            JOptionPane.showMessageDialog(null, "Driver nao localizado");
        } catch (SQLException Fonte) {
        }
        return com;
    }

    private boolean CONEXAO_DATABASE(String Servidor, String Porta, String usuario, String Senha, String Banco) {
        boolean com = false;
        String SERVIDOR = Servidor;
        String PORTA_CONEXAO = Porta;
        String USUARIO = usuario;
        String SENHA = Senha;
        String BANCO = Banco;
        try {
            Class.forName(driver);
            CONEXAO = DriverManager.getConnection("jdbc:mysql://" + SERVIDOR + ":" + PORTA_CONEXAO
                    + "/" + BANCO, USUARIO, SENHA);
            com = true;
        } catch (ClassNotFoundException Fonte) {
            JOptionPane.showMessageDialog(null, "Driver nao localizado");
        } catch (SQLException Fonte) {
        }
        return com;
    }

    private void FECHA_CONEXAO() {
        try {
            CONEXAO.close();
        } catch (SQLException fech) {
            JOptionPane.showMessageDialog(null, "Erro ao fechar conexao com o banco de dados" + fech);
        }
    }

    private boolean CRIA_DATA_BASE_COMPLETO() {
        boolean sucesso = true;
        if (CRIA_BANCO() == false) {
            sucesso = false;
        } else if (CRIA_TABELAS() == false) {
            sucesso = false;
        }

        return sucesso;
    }

    private boolean CRIA_BANCO() {
        boolean sucesso = false;
        PreparedStatement stm;
        String sql = "CREATE DATABASE IF NOT EXISTS " + T_Banco.getText() + "";

        try {
            stm = CONEXAO.prepareStatement(sql);
            stm.execute();
            sucesso = true;
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Erro", 0);
        }
//        FECHA_CONEXAO();
        return sucesso;
    }

    private boolean CRIA_TABELAS() {
        boolean sucesso = true;

        CONEXAO_DATABASE(T_Host.getText(), T_Porta.getText(), T_User.getText(), T_Senha.getText(), T_Banco.getText());

        if (CRIA_TABELA_PRODUTO() == false) {
            sucesso = false;
        } 

        FECHA_CONEXAO();
        return sucesso;
    }

    private boolean CRIA_TABELA_PRODUTO() {
        boolean sucesso = false;
        PreparedStatement stm;
        String sql = "CREATE TABLE  IF NOT EXISTS PRODUTO ("
                + " cod int(11) NOT NULL AUTO_INCREMENT,"
                + " nome varchar(45) DEFAULT NULL, "
                + " tamanho varchar(45) DEFAULT NULL, "
                + " cor varchar(45) DEFAULT NULL, "
                + " qdt int(11) DEFAULT NULL, "
                + " valorDeCusto decimal(10,2) DEFAULT NULL, "
                + " valorDeVenda decimal(10,2) DEFAULT NULL, "
                + " lucro decimal(10,2) DEFAULT NULL, "
                + " qtdMinimaEstoque int(11) DEFAULT NULL, "
                + " qtdMaximaEstoque int(11) DEFAULT NULL, "
                + " fornecedor varchar(45) DEFAULT NULL, "
                + "  PRIMARY KEY (cod) "
                + " ) ENGINE = InnoDB";
        try {
            stm = CONEXAO.prepareStatement(sql);
            stm.execute();
            sucesso = true;
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Erro", 0);
        }
        return sucesso;
    }

   
    
}
